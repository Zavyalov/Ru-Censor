package Censor;
use uni::perl;

use vars qw($VERSION @EXPORT @ISA @slang_common %hslang);

use locale;

require Exporter;

@ISA = qw(Exporter);
@EXPORT = qw(slangControl slangControl_wd slangControl_ar
slangLoadDict setDictHash setOneWord
setChangeType slangControl_change);
$VERSION = '0.051.02';

my $oneword = 1;
my $change_type = "beep";

# для замены матов нужно возвращать весь входной список, где для нормальных
#  слов вместо маски будет установлено пустое значение ""
my $need_all_word = 0;

#**************************************#
#-------------- данные ----------------#
#**************************************#

my @smiles = (
    "(\\\(\\\-?[:8])|(\\\(:[\\\|I!1])",
    "([3\\\[]:[\\\[\\\]])|([KК]:[PР])",
    "[:8\\\|I!1]\\\^[\\\)\\\{]",
    "([8:][\\\*,<=_nouv]\\\))|(d8=)",
    "[%,.\\\?BВOОXХg|I!1]-[6\\\)\\\(\\\|I!1O]",
    "[8:;]-?(([\\\)]+)|([\\\|!#\\\$%\\\&\\\(\\\*/0179<>?\@CСDEЕFIPРQSXХ\\\[\\\\\\\]`'aаbcсdeеijkoоqtvxх\\\{\\\}]))",
    "[#\\\&'`\\\(\\\*\\\+,8\\\-<=>\@BВ\\\[\\\{\\\}\\\~][:;8\\\|I]-?[\\\)oо\\\|#\\\$\\\&\\\(\\\*DI\\\>\\\[\\\]]",
    "[\\\(\\\*3][:8][<oо][\\\)\\\(\\\[\\\]]",
    "([:8][':]-?[\\\(\\\)])|([:8]~+\\\()",
    "[:8]-?[\\\[#\\\)\\\{\\\~][\\\]\\\)XХ\\\~\\\}]",
    "[\\\(\\\*\\\+:CСEЕ][:<\\\-=][\\\-:\\\)]-[<\\\)\\\|I8]",
    "([:8]-[\\\(\\\{][#=][\\\)\\\}])|([\\\(<][:8]-[\\\|\\\)][KК<][\\\-<]?\\\|?)|(<\\\{[:8]-\\\)\\\})"
);

my %word_change = (
    "automobile"    => [
        "запорожец",
        "жигули",
        "крайслер",
        "студебеккер",
        "уазик",
        "мерседес",
        "форд",
        "феррари"
    ],
    "beep"  => [
        "бип"
    ],
    "flower"        => [
        "лютик",
        "ландыш",
        "гладиолус",
        "роза",
        "ромашка",
        "фиалка",
        "колокольчик",
        "примула",
        "подснежник",
        "геацинт",
        "незабудка"
    ]
);

my %norm_word = (
    "а"        => [
        "амеб",
        "амудар",
        "ансамбл",
        "ансибл",
        "аспид",
        "ахтуб"
    ],
    "б"             => [
        "бебел",
        "бермуд",
        "блюхер",
        "бляпан[н]?",
        "бляронс",              # Бляронский
        "блямб",
        "блях[аеиу]?\$",
        "бляхо(?!([мпс]))",
        "бляха[йю]",
        "бляше",
        "бляшк",
        "боскреб"
    ],
    "в"             => [
        "веб\$",
        "вебер",
        "веб.?об",
        "вебстер",
        "влюбля",
        "все[#]?таки",
        "всуху",
        "втиху",
        "выгреб",
        "выхлеб"
    ],
    "г"             => [
        "гербарий",
        "гидро[кт]",
        "глеб",
        "гомеоп",
        "горох",
        "граб",
        "гре[#]?б[елну]",
        "гриб"
    ],
    "д"             => [
        "дебел",
        "дебилизм",
        "дебош",
        "дезокси",              # дезоксирибонуклеиновая
        "дирижаб",
        "дребед",
        "дротик",
        "дубля"
    ],
    "е"             => [
        "епан[н]?ч",
        "епарх"
    ],
    "з"             => [
        "завихрен",
        "заглубля",
        "загреб[ану]?",
        "задолбил",
        "заколеб",
        "залупил\$",
        "залупит",
        "(^застра[#]?хуя\$)|(^застра[#]?хуй((те(с.)?)|(ся))?\$)|(^застра[#]?хуем(ся)?\$)",
        "заштри[#]?ху",
        "зеб[ру]",
        "злоупотребля",
        "зяб"
    ],
    "и"             => [
        "изгиб",
        "икебан",
        "имбеци",
        "иметь",
        "(ипат\$)|(ипат((и)|(у)|(о)))",
        "истреб"
    ],
    "к"             => [
        "кан[н]?[еи]бал",
        "клебанов",
        "клеп",
        "кобел",
        "колеб",
        "коктебе",              # Коктебель
        "команд",
        "констеб",
        "корабля",
        "кракозяб",
        "куй\$"
    ],
    "л"             => [
        "лапидар",
        "липидо",
        "липуч",
        "лихую"
    ],
    "м"             => [
        "мандари",
        "мандат(?!(в))",
        "^мандел((а)|(ой))\$",  # Мандела
        "мандоли",
        "м[ао]хер",
        "мебел",
        "муданьцзян",   # город и река
        "мудехары"              # мусульмане
    ],
    "н"             => [
        "наибол",
        "наибыс",
        "наколеб",
        "нахулиган",
        "наябед",
        "неб[еоу]",
        "непсиху",
        "новосиб",
        "нотебук"
    ],
    "о"             => [
        "обляпа[лн]",
        "оглобл",
        "одномандат",
        "озлобля",
        "оскорбл",
        "ослабл",
        "отребье",
        "отскреб",
        "отчебуч",
        "охудеп"                # oxygen
    ],
    "п"             => [
        "парикмахер",
        "пахуч",
        "педагог",
        "педал",
        "педант",
        "педераст",
        "педолог",
        "педофил",
        "педро\$",
        "переб[еи]",
        "перемудр",
        "пидопригор",
        "пистол",
        "плебисц",
        "плебс",
        "плят(!(ь))",
        "побер",
        "погреб",
        "подгреб",
        "подсобля",
        "(^подстра[#]?хуя\$)|(^подстра[#]?хуй((те(с.)?)|(ся))?\$)|(^подстра[#]?хуем(ся)?\$)",
        "поколеб",
        "потреб",
        "поху[дж]",
        "пребел",
        "пребыв",
        "препин",
        "прибил",
        "прибор",
        "припизднюват", # припизднюваться (укр.)
        "приспособля",
        "прозяб",
        "психу"
    ],
    "р"             => [
        "раболепст",
        "разгреб",
        "раздроблят",
        "рас[с]?лабля",
        "расхлеб",
        "ребен",
        "ребер",
        "ребу[ст]",
        "ребя",
        "репин",
        "рибосом",              # рибосома
        "ру[#]?бля",
        "рябина"
    ],
    "с"             => [
        "(сабля\$)|(сабля(!(к)))|(сабл[ие])",
        "свирепст",
        "себ",
        "сердце",
        "серебр",
        "скипидар",
        "скобля",
        "скопид",
        "скреб",
        "(спид[а]?\$)|(спидо)",
        "соскобля",
        "стеб",
        "стебл[ея]",
        "степа",
        "стибрит",              # стибрить
        "стра[#]?ху(?!([еи]))",
        "сукачев"
    ],
    "т"             => [
        "талмуд",
        "теб[ея]\$",
        "телепат",
        "тибер",
        "торпед",
        "треба\$",
        "треб((у)|(ов))",
        "трепанг",
        "трибун"
    ],
    "у"             => [
        "углуб",
        "уподоб",
        "употреб",
        "усугуб"
    ],
    "ф"             => [
        "фламанд"
    ],
    "э"             => [
        "эберт",
        "эби.?нур",             # Эби-Нур
        "эбнер",
        "эбонит",
        "экебан",
        "эпистал",
        "эреб"
    ],
    "х"             => [
        "хайдфил",              # Хайдфильд
        "херберт",
        "херес",
        "херомант",
        "херсон",
        "херувим",
        "хлеб",
        "хли[вф]кие",   # Алиса в зазеркалье
        "хреб[ет]",
        "хреновый",
        "худе[лт]",
        "худяк",                # Худяков
        "хуже",
        "хуизху",               # ху из ху
        "хули[ло]",
        "хулит(?!(ол))",
        "хулиган(?!(х))",
        "хунвеэбин"
    ],
    "ц"             => [
        "целебн"
    ],
    "ч"             => [
        "чебок",
        "чебур"
    ],
    "ш"             => [
        "шумахер"
    ],
    "щ"             => [
        "щебен",
        "щедрот",
        "щелбан"
    ],
    "я"             => [
        "яблок",
        "яблонский",
        "ястреб"
    ]
);

my %core_mask = (
    "бзд"   => "бзд",
    "бля"   => "(б[\#+еи]?л[у\#+]?я)|(блиад)|(бл[еи]д[иу])|([кю]ляд)|([бп][и]?л[ая][дт]ь\$)|(билат.?\$)",
    "гондон"        => "г[ао]нд[ао][ен]",
    "дроч"  => "др[ою][ктч]",
    "еб#1"  => "(^уе\$)|(^е[\#+]?[бп][а]?\$)|([\#+еиэ][\#+б][аеиу][лнктрщч])|(е.?[\#+бп][аы][лнрт])|([еи][\#+б]авш)|(еб[ст]ел)",
    "еб#2"  => "(ебну)|([еи][\#+б][ыу]р)|([(орж)|(от)|(по)|(при)|(про)|(раз)|(рас)|(у)][\#+ъь]?[\#+иея]б)|(е[\#+б][лносуц])",
    "еб#3"  => "(в.?[ея][\#+б]+)|(.а[\#+ъь]?[\#+еия][\#+б])|([\#+еия][\#+б]в)|(п[ао]д[\#+ьъ][\#+е]б)|(^ебя\$)|(27[\\d]*.?.?ба)",
    "еб#4"  => "(йо[бп])|(епин)|(епст)|([\#+еи][\#+п]у[нч])|(((твою)|(тебя))еб)|(ибиом)|(^ебт.\$)|(вы[ея]вы)|((вы)?йаб)",
    "жоп"   => "(ж[\#+ео]п)|(ж[\\w]?оп)",
    "муда"  => "(м[\#+\у]д[аеиоюыянл])|(.удозв)|(мудвин)|(мудчи)|(м[\#+у]драк)",
    "манда" => "м[аоу]нд[аеоя]",
    "мат"   => "[\#+]{3,}",
    "нефиг" => "нефиг",
    "лядс"  => "лядс",
    "падл"  => "(падл[аоыю])|(пипид)",
    "перд"  => "(перн((у)|(ет)))|(выпер[дж])|(пердан)|(^перд\$)|(перде[жлнт])|(перд[ия][млт])|(пердн[еу])|(перд((ол)|(у)))|(перд[ью])",
    "пидар" => "([бп][\#еиы]?д[аеио]?р)|(п[еия]д[ао]г)|(педик)|(пидеатр)|(г[еи]дерас)|(пудура)|(питераст)",
    "пизд#1"        => "(п[ийы]?[с]?[жз][дж])|(п[еия][зс]?[ьъ]?д[ао])|(пист[ае])|(пи[тд]за)|(пизта)|(п[\#+]?[еи][\#+]?[зс][\#+]?д)|(кизд)",
    "пизд#2"        => "(п[\\w]?[сз]д[ао][бт])|(пивд)|(пиз((ад)|(оп)))|(пита\$)|(бл[ею]зд)|(ф[л]?[ею]зд)|(пиз[еу][днц])|(приздроп)|(з14[\\d]*.?.?[з]?д[аеы])",
    "сран"  => "(сран[н]?[адекоыь])|(сра[лч]ь?)|(срать)|(срет.?(ся)?\$)|(^сри\$)|(^сру\$)|(срун)|(срут)|(^срю\$)",
    "трах"  => "(трах((ан)|(ер)|(ать)|(мут)|(ун)))|(трахо((блю)|(ген)|(дро)|(мат)|(муд)))",
    "хрен"  => "(^хрена\$)|(хрен[ао]((в)|(е[бп])|(кн)|(мун)|(пут)|(сос)|(тен)))|(хрен[ель])",
    "хуй#1" => "(х.?у.?[еийыюя])|(х[\#]+)\$|(х[у\#+][у\#+]?[еийыюя])|(х[у\#+][у\#+]?л[еиья])|(^а[\#+]?ху\$)|(ахай)",
    "хуй#2" => "(^а[\#+]?ху\$)|(ахай)|(х[ао]й[дл])|(куй)|(м[\#+у]йня)|(х[\#+]?н[еюя])|(^х[еийыюя]\$)",
    "член"  => "члено((вид)|(воз)|(гл)|(мет)|(ног)|(прием)|(сос)|(под))",
    "япуч"  => "япуч"
);

my %hslang = (
    "1"        => [
        "^14[\\d]*.?.?[з]?д[аы]",
    ],
    "2"        => [
        "^27[\\d]*.?.?ба",
    ],
    "8"        => [
        "^8==?о"
    ],
    "а"        => [
        "^абанамат",
        "^анахну",
        "^архипиздрит",
        "^аст[ао]еб",
        "^аст[ао]п[еи]зд",
        "^аст[ао]хер",
        "^атасас",
        "^ат[\#+ъь]?[ея]б"
    ],
    "б"        => [
        "^бабоеб",
        "^басран",
        "^баться",
        "^бзд",
        "^бзжу",
        "^бзик",
        "^блев[ао]",
        "^блюдов",
        "^блюзд",
        "^бикс.",
        "^б[еи]л[еи]ат",
        "^блежник",
        "^блудилище",
        "^блья",
        "^бодзабор",
        "^бодунища",
        "^бомж.+",
        "^борзе",
        "^бортан",
        "^браточков",
        "^бухал",
        "^бухать",
        "^бухие",
        "^бухина",
        "^бухнина",
        "^бухло",
        "^бухман",
        "^бухой"
    ],
    "в"        => [
        "^вагин",
        "^вафлезл[ао]",
        "^вафлер",
        "^вафлист",
        "^вафло",
        "^вафлюшки",
        "^великодрюч",
        "^взбзд",
        "^вз[\#+ъь]еб",
        "^вздрюч",
        "^висл[ао]хеу",
        "^влагопр[о]?еб",
        "^влагопр[ао]",
        "^волосянка",
        "^возбух",
        "^восьмипроеб",
        "^впаривает",
        "^впаривать",
        "^вп[еи]рдол",
        "^впендюр",
        "^впарить",
        "^врот.?[еи\#+][\#+б]",
        "^вротзапил",
        "^вротскреб",
        "^вторяк",
        "^втыкание",
        "^втюха",
        "^вухух",
        "^выдрюч",
        "^выбл[еию]",
        "^выйобыв",
        "^выежива",
        "^выеть",
        "^выешкив",
        "^вып[еи]здр",
        "^выпенд[ю]?р",
        "^выподв",
        "^высерусь",
        "^высира",
        "^высра",
        "^высса",
        "^выссу"
    ],
    "г"        => [
        "^г[ао][вм]н",
        "^гадиловка",
        "^гадовск",
        "^гадство",
        "^гадюжник",
        "^гадюшник",
        "^гвоздедроч",
        "^геммор",
        "^гемор",
        "^гноильн",
        "^гнойно",
        "^говен",
        "^говешка",
        "^гомик",
        "^гомино",
        "^гомосек[\\w]{0,2}\$",
        "^гонолуп",
        "^гребзд",
        "^греб[ао]н",
        "^группов"
    ],
    "д"        => [
        "^данунах",
        "^двужоп",
        "^девствени",
        "^дермо",
        "^дерьм",
        "^д[еи]бил",
        "^д[еи]б[еи]дозуб",
        "^децл",
        "^длиннохер",
        "^д[ао]лбое",
        "^д[ао]пи[зж]",
        "^дрисн",
        "^дрисс",
        "^дрист",
        "^дрищ",
        "^дрочена",
        "^дрочан",
        "^дрочи[лтш]",
        "^дроч[ук]",
        "^дрочк",
        "^д[ао][ея]б",
        "^домохнот",
        "^д[ао]лб[ао]дя",
        "^д[ао]л[бп][ао]манд",
        "^д[ао](д[ао])?лб[ао]л[еия]х",
        "^д[ао]д[ао]лб[ао]н",
        "^додр[ою]ч",
        "^дофени",
        "^дофига",
        "^дуба[кртцч]",
        "^дундук",
        "^дура",
        "^дуровид",
        "^дурофан",
        "^дыдл"
    ],
    "е"        => [
        "^е[\#+][\#+]?т",
        "^е[бп]аши",
        "^е[бп]е[нмтц]",
        "^е[бп]т[ивы]",
        "^еби(?!(зне))",
        "^е[бп]ки",
        "^е[бп]твою",
        "^е[бп][с]?тит",
        "^едрен[акоу]",
        "^едрит",
        "^ежово",
        "^ездец",
        "^еклмн",
        "^елб",
        "^елд",
        "^емое\$",
        "^еп[е]?рн",
        "^епрст\$",
        "^ептать\$",
        "^епт[аю]\$",
        "^етит([\#+ъь]?)|(!(с))",
        "^(?<!(им))еть",
        "^е[пкх][ае][р]?н[н]?ый",
        "^ехнут"
    ],
    "ж"        => [
        "^жидов",
        "^жмот",
        "^жмуд",
        "^жмурик",
        "^жра[мч]",
        "^жыд"
    ],
    "з"        => [
        "^з14[\\d]*.?.?[з]?д[аы]",
        "^заблева",
        "^заговнять",
        "^задолб",
        "^задрип",
        "^задристать",
        "^задышк",
        "^заелдон",
        "^заеп[п]?ен",
        "^заеть",
        "^зажоп",
        "^закадри[лт]",
        "^закозли[лт]",
        "^заколбаси[лт]",
        "^з[ао]луп",
        "^заман((ал)|(дюк))",
        "^замyда",
        "^замудоха",
        "^занафуяч",
        "^заныка[лт]",
        "^зап[еи]ж",
        "^зап[еи]ндюр",
        "^зап[еи]рдун",
        "^запипи",
        "^записьк",
        "^заподл",
        "^запроеб",
        "^засер",
        "^засир",
        "^засобачи[лт]",
        "^застебан",
        "^засса",
        "^зас[с]?ыха\$",
        "^заторчал",
        "^защекан",
        "^захера",
        "^зв[еи]здец",
        "^зв[еи]здобол",
        "^зв[еи]здун",
        "^здец",
        "^звизд",
        "^зл[ао][бп][ао]е[бп]",
        "^зл[ао]д[ао]л[бп]",
        "^злоп[ао]х",
        "^з[ао][ао]?фил\$"
    ],
    "и"        => [
        "^и.?[бп]а[лнрт]",
        "^и.?[бп]аши",
        "^и.?[бп]е[нмтц]",
        "^изговн",
        "^издец",
        "^ипаца",
        "^итит([\#+ъь]?)|(!(с))",
        "^ить\$",
        "^их[еи]бут"
    ],
    "й"        => [
        "^йобан",
        "^йопрст"
    ],
    "к"        => [
        "^кабзд",
        "^казлы",
        "^кака[елнтш]",
        "^калоед",
        "^квазиуеб",
        "^кизди[тш]",
        "^кляпыжит",
        "^к[ао]бзд",
        "^к[ао]зл[ао]еб",
        "^к[ао]лд[ао]еб",
        "^к[ао]лдыр",
        "^к[ао]н[ао]еб",
        "^кебени",
        "^к[еи]рд[еы][кц]",
        "^кисец",
        "^коз.бл",
        "^косозалуп",
        "^коца[нт]",
        "^кр[ао]к[ао]еб",
        "^красн[ао]жоп",
        "^крендец",
        "^курв[аоы]",
        "^курвенок",
        "^курвин",
        "^курвяж",
        "^кутак",
        "^куякнул"
    ],
    "л"        => [
        "^лжеб",
        "^лихолох",
        "^лохану[лт]?",
        "^лярв"
    ],
    "м"        => [
        "^ма[вз][аео].?фак",
        "^мал[ао]ф",
        "^манд[\#+а]\$",
        "^м[ао]нд[ао][в]",
        "^мандакрыл",
        "^мандар[ао]еб",
        "^м[ао]нде[йрт]",
        "^манди[лтщ]?(?!(р))",
        "^мдак",
        "^междужоп",
        "^мндр[оу]",
        "^м[ао]ндатня",
        "^манд[уы]",
        "^мандюк",
        "^матоеб",
        "^матрюл",
        "^мин[\#+ъь]?ет",
        "^млин\$",
        "^мля",
        "^мобсел",
        "^мозгоеб",
        "^мозгоклю",
        "^мозгопроеб",
        "^мокрощ[еи]лк",
        "^моноп[еи]н[еи]с",
        "^мохно((нед)|(муд))",
        "^м[ао]шонк[ао][ао]?б",
        "^мундел",
        "^муячеч"
    ],
    "н"        => [
        "^набзде[лт]",
        "^наговня",
        "^надр[иы]с",
        "^надр[ою]ч",
        "^надрямс",
        "^назалуп",
        "^намандаш",
        "^напизд",
        "^насал",
        "^насса",
        "^насца",
        "^н[аи]фиг",
        "^нах\$",
        "^нах[пу]",
        "^нахеза",
        "^н[аи]х[еи]р",
        "^н[аи]хрен",
        "^нахуа\$",
        "^на[\#+ц]уй",
        "^нед[ао][ея]б",
        "^нед[ао]пи[зж]",
        "^неуе[\#+б]+",
        "^нечленосос"
    ],
    "о"        => [
        "^обдриста",
        "^обл[еи]м[ао]нд",
        "^обл[еи]муд",
        "^обос[ауы]",
        "^обосс[ауы]",
        "^обосца",
        "^обсир",
        "^обспускан",
        "^обуевш",
        "^огрохув",
        "^окуел",
        "^опр[ао]муд",
        "^опрст\$",
        "^ост[ао]хер",
        "^отдрюч",
        "^отмудоха",
        "^отпиз",
        "^отсоси\$",
        "^отчермуто",
        "^отъеть",
        "^офиге[влнт]",
        "^офиги[влнт]",
        "^офоршмачи",
        "^офуен[н]?",
        "^ох[еу]жоп",
        "^охумев",
        "^охулк",
        "^ох[еу]ндрот",
        "^ох[еу]р",
        "^охрен",
        "^ошмудок"
    ],
    "п"        => [
        "^педри[лк]",
        "^пендюр",
        "^пере[е]?б[алд]",
        "^пере[е]?б[ал]",
        "^передрен",
        "^перевзб",
        "^пер[е]?колд",
        "^перекосоеб",
        "^перемат",
        "^перемуд",
        "^перепизну",
        "^пересуч",
        "^перетит",
        "^перехер",
        "^пердлов",
        "^пернет",
        "^перну[влт]",
        "^п[еи][сз]ж",
        "^пиндос",
        "^пипе[т]?ц",
        "^пи[пс]ис",
        "^писк.\$",
        "^письк",
        "^писен",
        "^писю",
        "^писю[клнш]",
        "^пися",
        "^пист[\#+ъьюо]",
        "^питишка\$",
        "^плеха\$",
        "^плыва\$",
        "^плывун\$",
        "^п[ао]бл[еи]ден",
        "^п[ао]бл[ия]душ",
        "^подвзб",
        "^подговн",
        "^подзабор",
        "^подзл[ао]еб",
        "^подлоеб",
        "^подре[й]?туз",
        "^подроч[иу]",
        "^под[\#+ъь]еб",
        "^подстр[ао]хер",
        "^поеть",
        "^полуеб",
        "^полужоп",
        "^попоеб",
        "^поср[ае]т",
        "^посру",
        "^посс[ауы]",
        "^пофиг",
        "^похер",
        "^похух",
        "^пох[\#+ъь]е",
        "^поц[ау]?\$",
        "^поцоват",
        "^припизд",
        "^произ[\#+ъь]?еб",
        "^пр[ао]х[ао]еб",
        "^пр[еи]здун",
        "^пр[еиу]м[ао]нд[ао]",
        "^прилабун",
        "^прозалуп",
        "^пром[ао]нд",
        "^промуд",
        "^пр[ао]п[еиу]рд((ы)|([ао]м[ао]нд[ао]))",
        "^пр[ао]с[с]?уч",
        "^пр[ао]шм[ао]нд",
        "^пр[ао]х.блу",
        "^приебо",
        "^пропизд",
        "^пука[елтю]",
        "^пукн[еиу]",
        "^пучезад"
    ],
    "р"        => [
        "^р[ао][зс][\#+ъь]?е[бпт]",
        "^рах[\#+ъь]?ед",
        "^разгвоз",
        "^ра[зс]долба[еий]",
        "^ра[зс]долбое",
        "^ра[зс]дрю",
        "^ра[зс]простоеб",
        "^ра[зс]пидз",
        "^ра[зс]проеб",
        "^ра[зс]проет",
        "^ра[зс]пронаедр",
        "^ра[зс][с]?теб",
        "^ра[зс]тр[еи]кв",
        "^ра[зс]тыка",
        "^ра[зс]членх",
        "^р[ау][зс]туд[иы]т",
        "^расп[ао]хаб",
        "^распроторазд"
    ],
    "с"        => [
        "^сака",
        "^саки",
        "^самоеб",
        "^сать",
        "^сахер",
        "^свином[ао]нд",
        "^сговня",
        "^секел",
        "^семироеб",
        "^серепер",
        "^серун",
        "^серька",
        "^сест[\\w]?[ао]еб",
        "^сика",
        "^сикат",
        "^сикел",
        "^сипов",
        "^сирать",
        "^сирывать",
        "^ском[м]?унизд",
        "^скурви",
        "^скурех",
        "^скурея",
        "^скуряг",
        "^скуряж",
        "^сосомол",
        "^состать\$",
        "^спермот[ао]в[ао]з",
        "^сперли",
        "^спиж",
        "^спизд",
        "^срак\$",
        "^срак[ауо]",
        "^сруль",
        "^ссака",
        "^ссаки",
        "^ссан[н]?о",
        "^ссать",
        "^ссу\$",
        "^ссут\$",
        "^ссы\$",
        "^ссыкун\$",
        "^ссыкуха\$",
        "^ссыт\$",
        "^ссыте\$",
        "^ссышь\$",
        "^стерв[ао]",
        "^струк\$",
        "^стратокаст",
        "^[с]?сук[аи]",
        "^[с]?сюк[аи]\$",
        "^[с]?суче((х)|(нок))",
        "^[с]?суч[к]?ар",
        "^[с]?суч((ий)|(ка)|(ья))",
        "^суперзаеб",
        "^сухобзд",
        "^суходроч",
        "^сцавинье",
        "^сц[аиы]к[аиу]",
        "^сцание",
        "^сцать",
        "^сциха",
        "^сцуль",
        "^сцыха",
        "^с[\#+ъь]еб",
        "^сыкун"
    ],
    "т"        => [
        "^тарачлен",
        "^твоюмат",
        "^титеч",
        "^титка",
        "^титочка",
        "^титька",
        "^трандец\$",
        "^триквант",
        "^трим[ао]н[ао]?д",
        "^троедром",
        "^троедруч",
        "^тринитроеб",
        "^трипиз[ао][бп]лд",
        "^трипробзд",
        "^трипер",
        "^триппер",
        "^трих[ао]м[ао]н[ао]?д",
        "^троедолбо",
        "^трындец",
        "^трындоп[еи]нд",
        "^туебен"
    ],
    "у"        => [
        "^ублюд",
        "^угреб[и]",
        "^угробищ",
        "^уеть",
        "^ум[аоу]дох",
        "^упизд",
        "^усса[лт]",
        "^уссыш",
        "^усцаться"
    ],
    "ф"        => [
        "^фак\$",               # англ.
        "^факин",               # англ.
        "^факну",               # англ.
        "^факуд",               # англ.
        "^факошит",             # англ.
        "^фигня",
        "^фигови",
        "^фидераст",
        "^физд[еи]",
        "^фопа",
        "^фуй\$",
        "^фуф((ел)|(ка)|(ло))",
        "^фуцк"
    ],
    "х"        => [
        "^хезать",
        "^хер",
        "^хера",
        "^хере",
        "^херн[еияю]",
        "^х[еи]ров",
        "^хером",
        "^хитрожоп",
        "^хитрозад",
        "^хлабал",
        "^хлюха",
        "^хуканут",
        "^хурл",
        "^хуров"
    ],
    "ц"        => [
        "^целк[аи]"
    ],
    "ч"        => [
        "^черебзд",
        "^чернож[ео]п",
        "^чикс.",
        "^чмо\$",
        "^чмыр[еья]",
        "^членяр"
    ],

    "ш"        => [
        "^шваль",
        "^швинд",
        "^шизд[ао]х",
        "^шняг",
        "^шух.р"
    ],
    "э"        => [
        "^э[бп]а[лнрт]",
        "^э[бп]аши",
        "^э[бп]е[нмтц]",
        "^эб[илносуц]",
        "^эфи[ео]б"
    ],

    "я"        => [
        "^я.?[бп]а[лнрт]",
        "^я.?[бп]аши",
        "^я.?[бп]е[нмтц]",
        "^яб[илносуц]",
        "^я[бп]тв",
        "^япу",
        "^ялд[аоу]"
    ],
    "ю"        => [
        "^ютит([\#+ъь]?)|(!(с))",
        "^юхан"
    ]
);

# Возвращает true если слово нецензурное, иначе false
sub slangControl (@) {
    my @out = @_;

    setOneWord(1);
    my @isBad = slangControl_ar(@out);

    return defined($isBad[0]) ? 1 : 0;
}

# Возвращает слово которое считается нецензурным
sub slangControl_wd (@) {
    my @out = @_;

    my @isBad = slangControl_ar(@out);

    if ($oneword) { return $isBad[0]; }
    else { return map { $_->[0] } @isBad; }
}

sub slangControl_change (@)
{
    my @out = @_;

    my $cow = setOneWord();
    setOneWord(0);

    $need_all_word = 1;
    my @isBad = slangControl_ar(@out);

    if ($#{$word_change{$change_type}} > 0)
    {
        my $t = time();

        my $nr = $#{$word_change{$change_type}};

        for my $i ( 0..$#isBad ) {
            if($isBad[$i][1] ne "")
            {
                my $rnd = (int rand($nr));
                $isBad[$i][1] = $word_change{$change_type}[$rnd];
            }
        }
    }
    else
    {
        for my $i ( 0..$#isBad ) {
            if($isBad[$i][1] ne "")
            {
                $isBad[$i][1] = $word_change{$change_type}[0];
            }
        }
    }

    $need_all_word = 0;
    setOneWord($cow);

    return @isBad;
}

sub slangControl_ar (@)
{

    my @in = @_;

    my @w = ();
    my $jw = my $wo = my $w1 = my $w2 = my $w3 = my $w4 = "";
    my $jb = 0;
    my $first = 1;
    foreach my $s (@in)
    {
        $s = pre_psevdo($s);

        $s =~ s/^[.,\!\?]+//;
        $s =~ s/[.,\!\?]+$//;

        $s = pre_double($s);

        if(length($s) < 5)
        {
            $s =~ s/(.)\1{1,}/$1$1/g;
        }

        if(length($s) < 3)
        {
            unless($jb)
            {
                my $f = lc($s);
                if ($f =~ /(\bа)|(\bах)|(\bв)|(\b[вмт]ы)|(\bд[ао])|(\b[её]б)|(\bже)|(\bза)|(\bи[з]?)|(\bк)|(\bли)|(\bн[аеиу])|(\bно)|(\bпо)|(\bо[нт])|(\bс)|(\b[оэ]х)|(\bя)/)
                {
                    $wo = $s;
                    $s = pre_common($s);
                    $s = pre_double($s);
                    $w1 = $w2 = $s;
                    $w2 =~ s/[\#]//g;
                    $w2 = pre_double($w2);
                    $w3 = pre_lat_a($w2);
                    $w4 = pre_lat_b($w2);

                    if ($w4 eq $w3)
                    {
                        $w4 = "";
                        if ($w3 eq $w2)
                        {
                            $w3 = "";
                            if ($w2 eq $w1)
                            {
                                $w2 = "";
                            }
                        }
                    }
                    push(@w, [$wo, $w1, $w2, $w3, $w4]);
                    next;
                }
            }
            $jw .= $s;
            $jb++;
        }
        else
        {
            if($jb > 0)
            {
                $wo = $jw;
                my $s = pre_common($wo);
                $s = pre_double($s);
                $w1 = $w2 = $s;
                $w2 =~ s/[\#]//g;
                $w2 = pre_double($w2);
                $w3 = pre_lat_a($w2);
                $w4 = pre_lat_b($w2);

                if ($w4 eq $w3)
                {
                    $w4 = "";
                    if ($w3 eq $w2)
                    {
                        $w3 = "";
                        if ($w2 eq $w1)
                        {
                            $w2 = "";
                        }
                    }
                }
                push(@w, [$wo, $w1, $w2, $w3, $w4]);
                $jw = "";
                $jb = 0;
            }

            $wo = $s;
            $s = pre_common($s);
            $s = pre_double($s);
            $w1 = $w2 = $s;
            $w2 =~ s/[\#]//g;
            $w2 = pre_double($w2);
            $w3 = pre_lat_a($w2);
            $w4 = pre_lat_b($w2);

            if ($w4 eq $w3)
            {
                $w4 = "";
                if ($w3 eq $w2)
                {
                    $w3 = "";
                    if ($w2 eq $w1)
                    {
                        $w2 = "";
                    }
                }
            }

            push(@w, [$wo, $w1, $w2, $w3, $w4]);
        }
    }

    if($jb)
    {
        $wo = $jw;
        my $s = pre_common($wo);
        $s = pre_double($s);
        $w1 = $w2 = $s;
        $w2 =~ s/[\#]//g;
        $w3 = pre_lat_a($w2);
        $w4 = pre_lat_b($w2);

        if ($w4 eq $w3)
        {
            $w4 = "";
            if ($w3 eq $w2)
            {
                $w3 = "";
                if ($w2 eq $w1)
                {
                    $w2 = "";
                }
            }
        }
        push(@w, [$wo, $w1, $w2, $w3, $w4]);
    }

    return sC_ar(@w);
}

# Загружает новый словарь
sub slangLoadDict ( $ ; $ )
{
    my ($file,$add) = @_;
    if(-e $file) {open(F,$file) or die}
    else {return}

    %hslang = () if (defined($add) && $add == 1);

    while (<F>) {
        chomp;
        my $g = $_;
        s/^\W*?(\w).*$/$1/;
        push(@{$hslang{$_}},$g);
    }

    close(F);
    return 1;
}

sub setOneWord (;$ ) {
    my $h = shift;

    return $oneword unless (defined($h));
    return $oneword = $h;
}

sub setChangeType (;$ ) {
    my $h = shift;

    return $change_type unless (defined($h));
    return $change_type = exists $word_change{$h} ? $h : "beep";
}


#**************************************#
#--------- внутренние функции ---------#
#**************************************#

sub sC_ar(@)
{
    my @in = @_;
    my @isBad;
    my $mask = "";

    for my $mi ( 0..$#in ) {
        my $b = $in[$mi][0];
        my $isbad = 0;
        for my $mj ( 1..$#{$in[$mi]} ) {

            my $t = $in[$mi][$mj];
            last if $t eq "";

            $t =~ s/\./\#/g;
            $t = lc($t);

            if (norm_word($t))
            {
                if($need_all_word)
                {
                    push(@isBad, [$b, ""]);
                }
                $isbad = 0;
                last;
            }

            foreach my $m ( keys %core_mask )
            {
                if ($t =~ m/$core_mask{$m}/)
                {
                    $mask = $m;
                    $isbad++;
                    last;
                }
            }

            next if ($oneword && $isbad);
            next if ($isbad);

            $t =~ s/^не//;

            my $c = substr($t, 0, 1);
            next if $c eq "" || !defined $hslang{$c};

            for my $m (@{$hslang{$c}}) {
                if ($t =~ m/$m/)
                {
                    $mask = $m;
                    $isbad++;
                    last;
                }
            }

            next if ($oneword && $isbad);

            if (!$isbad && $need_all_word)
            {
                push(@isBad, [$b, ""]);
            }

        }

        if ($isbad)
        {
            if ($oneword) { @isBad = ($b, $mask); }
            else { push(@isBad, [$b, $mask]); }
        }

    }
    return @isBad;
}

sub pre_common(@)
{
    my ($r) = @_;

    unless (isSmailes($r)) {
        $r = lc($r);

        $r =~ tr/036/озб/;
        $r =~ tr/gcxyaeokhtn/дсхуаеокнтп/;
        $r =~ tr/diz\ё/дизе/;

        $r =~ tr/\©/\#/;

        $r =~ s/[\.\,]//g;
        $r =~ s/[\~\!\@\$\%\^\&\*\(\)\-\_\+\\\|\?\>\<\"\:\;\'\`\/]/\#/g;
    }

    return $r;
}

sub isSmailes(@)
{
    my ($r) = @_;
    my $m = 0;

    foreach my $s (@smiles)
    {
        if ($r =~ m/^$s$/)
        {
            $m++;
            last;
        }
    }

    return $m;
}

sub pre_psevdo(@)
{
    my ($r) = @_;

    $r =~ s/\/\\/л/g;       # /\
    $r =~ s/\>\</х/g;       # ><
    $r =~ s/\}\{/х/g;       # }{
    $r =~ s/\)\(/х/g;       # )(
    $r =~ s/\|\/\|/и/g;     # |/|
    $r =~ s/\`\//у/g;       # `/
    $r =~ s/\-\//у/g;       # -/
    $r =~ s/\`\-\//у/g;     # `-/
    $r =~ s/b\|/ы/g;        # b|
    $r =~ s/bI/ы/g;         # bI

    $r =~ s/&[Et][Uu][Mm][Ll];/е/g;
    $r =~ s/&#203;/е/g;
    $r =~ s/&[Cc][Ee][Nn][Tt];/с/g;
    $r =~ s/&#162;/с/g;
    $r =~ s/&#120;/х/g;
    $r =~ s/&#121;/у/g;

    return $r;
}

sub pre_lat_a(@)
{
    my ($r) = @_;

    $r =~ tr/bmupz/вмирз/;

    return $r;
}

sub pre_lat_b(@)
{
    my ($r) = @_;

    $r =~ tr/bmupz/ьтупя/;

    return $r;
}

sub pre_double(@)
{
    my ($r) = @_;

    $r =~ s/([^\#\.])\1{2,}/$1$1/g;
    $r =~ s/([^нс\#])\1{1,}/$1/g;

    $r =~ s/[\#]+$// unless $r =~ /^\#+$/ || length($r) < 6;
    $r =~ s/^[\#]// unless $r =~ /^\#+$/ || length($r) < 6;

    return $r;
}

sub norm_word(@)
{
    my ($t) = @_;
    my $god = 0;

    my $c = substr($t, 0, 1);
    if (defined $norm_word{$c})
    {
        for my $s (@{$norm_word{$c}}) {
            if ($t =~ m/$s/) {
                $god = 1;
                last;
            }
        }
    }
    return $god;
}

1;
__END__
# Below is the stub of documentation for your module. You better edit it!

=head1 NAME

Lingua::RU::Censure - Perl extension for automatically detect deprecated
russian slang.

=head1 SYNOPSIS

  use Lingua::RU::Censure;

  die "You can't use this \"@word\"!\n" if (slangControl(@words));
  die "You can't use this word: \"$word\"\n"
    if ($word = slangControl_wd(@words));
  die "Detect word \"$w[0]\" by mask \"$w[1]\"\n"
    if (@w = slangControl_ar(@words));
  slangLoadDict("file");

=head1 DESCRIPTION

=over 3

=item slangControl(@words)

Checks words for deprecated lexems. Return TRUE/FALSE

=item slangControl_wd(@words)

Checks words for deprecated lexems. Return a word.

=item slangControl_change(@words)

Change deprecated words to "good" (?) words.

=item slangControl_ar(@words)

Checks words for deprecated lexems. Return an array, where
element #0 - word and element #1 - mask.

=item slangLoadDict($file,$overw)

Load new dictionary of deprecated words. $file - name of file,
$overw - optional flag. 1 - owerwrite exists dictionary, 0 -
add to. Default 0.
Format of dictionary file: on one row - one regexp.

=item setOneWord({1,0,})

If this is set then slangControl_wd() will return one word, othervise - list.

=item setChangeType()

Set type of change of deprecated words, eg: "authomobile","beep","flower".

=back

=head1 AUTHOR

Michael B. Babakov <M.Babakov@sochi.net.ru>,
Artur Penttinen <artur@niif.spb.su>

=head1 SEE ALSO

perl(1).

=cut
